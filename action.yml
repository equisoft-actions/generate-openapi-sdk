name: Generate and publish an openapi SDK
description: |
  Run our OpenApi-SDK gradle tasks to generate and publish a SDK.

  See https://github.com/kronostechnologies/standards/tree/master/gradle/openapi-sdk

inputs:
  generator-name:
    description: |
      Name of the generator supported by the openapi-sdk plugin.
      See https://github.com/kronostechnologies/standards/tree/master/gradle/openapi-sdk
    required: true
  gradle-properties:
    description: Content of a gradle.properties file that will be passed to the gradle runner.
    required: false
    default: ""
  gradle-project-path:
    description: |
      Gradle project path. For example: bff.
      Defaults to the root project.
    required: true
    default: "."
  is-release:
    description: true if this version is a tagged release.
    required: false
    default: 'false'
  openapi-spec-file:
    description: Optionnal openapi.yaml spec file path.
    required: false
    default: ""
  publish:
    description: true to publish this SDK once built.
    required: true
    default: "false"
  publish-pat:
    description: Personal access token used to publish. Full `repo` access is required.
    required: false
  working-directory:
    description: Relative path under $GITHUB_WORKSPACE where the root project is located.
    required: false
    default: "."

runs:
  using: "composite"
  steps:
    - name: Lookup properties
      id: properties
      shell: bash
      run: |
        PROPERTIES=(
          is-release=${{ inputs.is-release }}
        )
        TASK=build

        GENERATOR=${{ inputs.generator-name }}
        GENERATOR=${GENERATOR,,}
        GENERATOR=${GENERATOR^}

        if [[ "${{ inputs.publish }}" == "true" ]]; then
          TASK=publish
          PROPERTIES+=(gpr.write.key=${{ inputs.publish-pat }});

          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
        fi

        if [[ "${{ inputs.openapi-spec-file }}" != "" ]]; then
          PROPERTIES+=(openApiSpec=${{ inputs.openapi-spec-file }});
        fi

        echo "task-name=${TASK}${GENERATOR}Sdk" >> $GITHUB_OUTPUT
        echo "PROPERTIES<<EOF" >> $GITHUB_ENV
        printf -- "-P%s\n" "${PROPERTIES[@]}" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

    - name: Process gradle properties
      id: gradle-properties
      shell: python
      env:
        GRADLE_PROPERTIES: ${{ inputs.gradle-properties }}
      run: |
        import os

        properties_list: list[str] = [line for line in (line.strip() for line in os.environ.get('GRADLE_PROPERTIES').splitlines()) if line]
        properties = list(map(lambda x: f'-P{x}' if not x.startswith('-P') else x, properties_list))

        with open(os.environ.get('GITHUB_OUTPUT'), 'a') as output_file:
          output_file.write('gradle-properties=')
          output_file.write(' '.join(properties))
          output_file.write('\n')

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4
      with:
        gradle-version: wrapper
        build-root-directory: ${{ inputs.working-directory }}

    - name: Publish SDK
      working-directory: ${{ inputs.working-directory }}
      run: >-
        -p ${{ inputs.gradle-project-path }}
        ${{ steps.properties.outputs.task-name }}
        ${{ env.PROPERTIES }}
        ${{ steps.gradle-properties.outputs.gradle-properties }}
